// 自动生成的梅尔滤波器系数 (稀疏表示)
// 参数: nfft=512, num_filters=26, sample_rate=8000

#ifndef MEL_FILTERS_SPARSE_H
#define MEL_FILTERS_SPARSE_H

#include "arm_math.h"

#define NUM_FILTERS 26
#define NFFT_HALF 257
#define MAX_NONZERO 39

// 每个滤波器的非零系数索引
const uint16_t mel_indices[NUM_FILTERS][MAX_NONZERO] = {
    {0, 1, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0},
    {3, 4, 5, 6, 7, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0},
    {6, 7, 8, 9, 10, 11, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {10, 11, 12, 13, 14, 15, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {14, 15, 16, 17, 18, 19, 20, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0},
    {59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0},
    {67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0},
    {75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 
     91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0},
    {84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
     100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0},
    {93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 
     109, 110, 111, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0},
    {103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 
     119, 120, 121, 122, 123, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0},
    {114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 
     130, 131, 132, 133, 134, 135, 136, 137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 
     142, 143, 144, 145, 146, 147, 148, 149, 150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 
     155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 
     168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 
     182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 0, 0, 0, 0, 0, 0, 0},
    {182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 
     198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 
     214, 0, 0, 0, 0, 0, 0},
    {199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 
     215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 
     231, 232, 233, 0, 0, 0, 0},
    {216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 
     232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 
     248, 249, 250, 251, 252, 253, 254}
};

// 每个滤波器的非零系数值
const float32_t mel_values[NUM_FILTERS][MAX_NONZERO] = {
    {0.333333f, 0.666667f, 1.000000f, 0.666667f, 0.333333f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f},
    {0.333333f, 0.666667f, 1.000000f, 0.750000f, 0.500000f, 0.250000f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f},
    {0.250000f, 0.500000f, 0.750000f, 1.000000f, 0.750000f, 0.500000f, 0.250000f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
    {0.250000f, 0.500000f, 0.750000f, 1.000000f, 0.750000f, 0.500000f, 0.250000f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
    {0.250000f, 0.500000f, 0.750000f, 1.000000f, 0.800000f, 0.600000f, 0.400000f, 0.200000f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
    {0.200000f, 0.400000f, 0.600000f, 0.800000f, 1.000000f, 0.800000f, 0.600000f, 0.400000f, 
     0.200000f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
    {0.200000f, 0.400000f, 0.600000f, 0.800000f, 1.000000f, 0.833333f, 0.666667f, 0.500000f, 
     0.333333f, 0.166667f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
    {0.166667f, 0.333333f, 0.500000f, 0.666667f, 0.833333f, 1.000000f, 0.800000f, 0.600000f, 
     0.400000f, 0.200000f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
    {0.200000f, 0.400000f, 0.600000f, 0.800000f, 1.000000f, 0.833333f, 0.666667f, 0.500000f, 
     0.333333f, 0.166667f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
    {0.166667f, 0.333333f, 0.500000f, 0.666667f, 0.833333f, 1.000000f, 0.857143f, 0.714286f, 
     0.571429f, 0.428571f, 0.285714f, 0.142857f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f},
    {0.142857f, 0.285714f, 0.428571f, 0.571429f, 0.714286f, 0.857143f, 1.000000f, 0.857143f, 
     0.714286f, 0.571429f, 0.428571f, 0.285714f, 0.142857f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f},
    {0.142857f, 0.285714f, 0.428571f, 0.571429f, 0.714286f, 0.857143f, 1.000000f, 0.875000f, 
     0.750000f, 0.625000f, 0.500000f, 0.375000f, 0.250000f, 0.125000f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f},
    {0.125000f, 0.250000f, 0.375000f, 0.500000f, 0.625000f, 0.750000f, 0.875000f, 1.000000f, 
     0.875000f, 0.750000f, 0.625000f, 0.500000f, 0.375000f, 0.250000f, 0.125000f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
    {0.125000f, 0.250000f, 0.375000f, 0.500000f, 0.625000f, 0.750000f, 0.875000f, 1.000000f, 
     0.888889f, 0.777778f, 0.666667f, 0.555556f, 0.444444f, 0.333333f, 0.222222f, 0.111111f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
    {0.111111f, 0.222222f, 0.333333f, 0.444444f, 0.555556f, 0.666667f, 0.777778f, 0.888889f, 
     1.000000f, 0.888889f, 0.777778f, 0.666667f, 0.555556f, 0.444444f, 0.333333f, 0.222222f, 
     0.111111f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
    {0.111111f, 0.222222f, 0.333333f, 0.444444f, 0.555556f, 0.666667f, 0.777778f, 0.888889f, 
     1.000000f, 0.900000f, 0.800000f, 0.700000f, 0.600000f, 0.500000f, 0.400000f, 0.300000f, 
     0.200000f, 0.100000f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
    {0.100000f, 0.200000f, 0.300000f, 0.400000f, 0.500000f, 0.600000f, 0.700000f, 0.800000f, 
     0.900000f, 1.000000f, 0.909091f, 0.818182f, 0.727273f, 0.636364f, 0.545455f, 0.454545f, 
     0.363636f, 0.272727f, 0.181818f, 0.090909f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f},
    {0.090909f, 0.181818f, 0.272727f, 0.363636f, 0.454545f, 0.545455f, 0.636364f, 0.727273f, 
     0.818182f, 0.909091f, 1.000000f, 0.916667f, 0.833333f, 0.750000f, 0.666667f, 0.583333f, 
     0.500000f, 0.416667f, 0.333333f, 0.250000f, 0.166667f, 0.083333f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f},
    {0.083333f, 0.166667f, 0.250000f, 0.333333f, 0.416667f, 0.500000f, 0.583333f, 0.666667f, 
     0.750000f, 0.833333f, 0.916667f, 1.000000f, 0.923077f, 0.846154f, 0.769231f, 0.692308f, 
     0.615385f, 0.538462f, 0.461538f, 0.384615f, 0.307692f, 0.230769f, 0.153846f, 0.076923f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
    {0.076923f, 0.153846f, 0.230769f, 0.307692f, 0.384615f, 0.461538f, 0.538462f, 0.615385f, 
     0.692308f, 0.769231f, 0.846154f, 0.923077f, 1.000000f, 0.923077f, 0.846154f, 0.769231f, 
     0.692308f, 0.615385f, 0.538462f, 0.461538f, 0.384615f, 0.307692f, 0.230769f, 0.153846f, 
     0.076923f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
    {0.076923f, 0.153846f, 0.230769f, 0.307692f, 0.384615f, 0.461538f, 0.538462f, 0.615385f, 
     0.692308f, 0.769231f, 0.846154f, 0.923077f, 1.000000f, 0.928571f, 0.857143f, 0.785714f, 
     0.714286f, 0.642857f, 0.571429f, 0.500000f, 0.428571f, 0.357143f, 0.285714f, 0.214286f, 
     0.142857f, 0.071429f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
    {0.071429f, 0.142857f, 0.214286f, 0.285714f, 0.357143f, 0.428571f, 0.500000f, 0.571429f, 
     0.642857f, 0.714286f, 0.785714f, 0.857143f, 0.928571f, 1.000000f, 0.937500f, 0.875000f, 
     0.812500f, 0.750000f, 0.687500f, 0.625000f, 0.562500f, 0.500000f, 0.437500f, 0.375000f, 
     0.312500f, 0.250000f, 0.187500f, 0.125000f, 0.062500f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 
     0.0f, 0.0f},
    {0.062500f, 0.125000f, 0.187500f, 0.250000f, 0.312500f, 0.375000f, 0.437500f, 0.500000f, 
     0.562500f, 0.625000f, 0.687500f, 0.750000f, 0.812500f, 0.875000f, 0.937500f, 1.000000f, 
     0.941176f, 0.882353f, 0.823529f, 0.764706f, 0.705882f, 0.647059f, 0.588235f, 0.529412f, 
     0.470588f, 0.411765f, 0.352941f, 0.294118f, 0.235294f, 0.176471f, 0.117647f, 0.058824f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
    {0.058824f, 0.117647f, 0.176471f, 0.235294f, 0.294118f, 0.352941f, 0.411765f, 0.470588f, 
     0.529412f, 0.588235f, 0.647059f, 0.705882f, 0.764706f, 0.823529f, 0.882353f, 0.941176f, 
     1.000000f, 0.941176f, 0.882353f, 0.823529f, 0.764706f, 0.705882f, 0.647059f, 0.588235f, 
     0.529412f, 0.470588f, 0.411765f, 0.352941f, 0.294118f, 0.235294f, 0.176471f, 0.117647f, 
     0.058824f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
    {0.058824f, 0.117647f, 0.176471f, 0.235294f, 0.294118f, 0.352941f, 0.411765f, 0.470588f, 
     0.529412f, 0.588235f, 0.647059f, 0.705882f, 0.764706f, 0.823529f, 0.882353f, 0.941176f, 
     1.000000f, 0.947368f, 0.894737f, 0.842105f, 0.789474f, 0.736842f, 0.684211f, 0.631579f, 
     0.578947f, 0.526316f, 0.473684f, 0.421053f, 0.368421f, 0.315789f, 0.263158f, 0.210526f, 
     0.157895f, 0.105263f, 0.052632f, 0.0f, 0.0f, 0.0f, 0.0f},
    {0.052632f, 0.105263f, 0.157895f, 0.210526f, 0.263158f, 0.315789f, 0.368421f, 0.421053f, 
     0.473684f, 0.526316f, 0.578947f, 0.631579f, 0.684211f, 0.736842f, 0.789474f, 0.842105f, 
     0.894737f, 0.947368f, 1.000000f, 0.952381f, 0.904762f, 0.857143f, 0.809524f, 0.761905f, 
     0.714286f, 0.666667f, 0.619048f, 0.571429f, 0.523810f, 0.476190f, 0.428571f, 0.380952f, 
     0.333333f, 0.285714f, 0.238095f, 0.190476f, 0.142857f, 0.095238f, 0.047619f}
};

// 每个滤波器的非零系数数量
const uint16_t mel_nonzero_count[NUM_FILTERS] = {
    5, 6, 7, 7, 8, 9, 10, 10, 10, 12, 13, 14, 15, 16, 17, 18, 
    20, 22, 24, 25, 26, 29, 32, 33, 35, 39
};

#endif // MEL_FILTERS_SPARSE_H
